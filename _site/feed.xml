<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-26T10:33:11-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">The Unvarnished Geek</title><subtitle>Making Tech Sane Again</subtitle><entry><title type="html">The Elegance of Plain-Text Writing</title><link href="http://localhost:4000/2020/11/25/plain-text-one.html" rel="alternate" type="text/html" title="The Elegance of Plain-Text Writing" /><published>2020-11-25T00:00:00-06:00</published><updated>2020-11-25T00:00:00-06:00</updated><id>http://localhost:4000/2020/11/25/plain-text-one</id><content type="html" xml:base="http://localhost:4000/2020/11/25/plain-text-one.html">&lt;h2 id=&quot;the-elegance-of-plain-text-writing&quot;&gt;The Elegance of Plain-Text Writing&lt;/h2&gt;

&lt;h3 id=&quot;why-plain-text&quot;&gt;Why Plain Text?&lt;/h3&gt;

&lt;p&gt;I’ll admit it, I’m a tech nerd. Or, at least, as much of a tech nerd as one is likely to find in an English department.&lt;/p&gt;

&lt;p&gt;I’m a scholar of medieval literature, by trade. I think medievalists bring a useful perspective to technology: a kind of historical awareness that allows us to see technology as more of a collection of useful functions–where novelty isn’t necessarily the only value–rather than a progressive march toward perfection. This approach allows us to ask not “what’s the newest thing?” but rather “what’s the best technology for the job?” in an awareness that the best tool for the job might potentially be a very old one.&lt;/p&gt;

&lt;p&gt;One thing all we scholars in the humanities do all the time is &lt;em&gt;write,&lt;/em&gt; and taking my “medievalist mind” to the available technologies for doing that has enabled me to discover some tools for supporting my writing that are in some ways older and less “high tech” than other options, but, for the same reason, are also so much more stable, more sustainable, and so much easier to manage that they’ll make your “modern” office suite seem downright clunky by comparison.&lt;/p&gt;

&lt;h3 id=&quot;the-elegance-of-plain-text&quot;&gt;The Elegance of Plain Text&lt;/h3&gt;

&lt;p&gt;To understand how working in plain text is helpful, think about the tools you normally use to write on a computer. If you’re like most, you default to a traditional “word processor” such as Microsoft Word. But consider this: have you ever had a problem with Word where some strange formatting seems to have infiltrated your document and you can’t get rid of it, no matter what you do or what settings you change? Have you ever had a Word document behave in infuriatingly odd ways for no apparent reason? Well, there is a reason, which is that Word documents are actually &lt;em&gt;extremely&lt;/em&gt; complicated beasts. For example, a single sentence in Word
might &lt;em&gt;appear&lt;/em&gt; to be very simple. However, underneath what you can see, there’s a huge amount of code that you don’t can’t. As an experiment for this post, I typed a single sentence in Word, and then revealed the underlying code: there was over &lt;strong&gt;nine pages&lt;/strong&gt; of code for that solitary sentence.&lt;/p&gt;

&lt;p&gt;Hence one big reason Word tends to misbehave, and misbehave more the more you work with a document. As you add edits, elements such as notes and images, copy text from other sources, rearrange blocks of text–in other words, most of the things an academic does with documents all the time–the more of that code is inserted and has to interact with previous code, and the more complex it becomes. No wonder your document starts behaving as though it’s possessed by something unholy the more you manipulate it.&lt;/p&gt;

&lt;p&gt;On the other hand, a plain-text file contains only the ascii characters that you type. A plain text file in which you type:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a simple sentence in plain text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;contains only the characters you typed, nothing else. If you make edits, rearrange things, paste in text from elsewhere, make lots of revisions over time, add sources, etc., you’re only rearranging and addind &lt;em&gt;your&lt;/em&gt; text.&lt;/p&gt;

&lt;p&gt;While a file from an office suite might (kinda falsely) boast, “what you see is what you get,” a plain-text file can easily affirm that what you see is &lt;em&gt;what is there&lt;/em&gt;. No shenanigans.&lt;/p&gt;

&lt;p&gt;A few other advantages of plain text:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;It’s compatible with everything.&lt;/strong&gt; You can edit plain text files on any device, with any simple text editor. You can work on your writing on any computer, your tablet, or even your phone without screwing up any formatting in the process. You already have a perfectly-capable plain-text editor on your computer if you’re using any common operating system: the venerable &lt;strong&gt;Notepad&lt;/strong&gt; has come budled with Windows for decades, &lt;strong&gt;Text Edit&lt;/strong&gt; is the equivalent for Mac OS. Different Linux distributions come with different small text editors, but tools such as &lt;strong&gt;Mousepad&lt;/strong&gt; and &lt;strong&gt;Gedit&lt;/strong&gt; are common. There are also, of course, many free plain-text editors for Android and iOS only a few clicks away through your preferred app store.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;It’s sustainable over time.&lt;/strong&gt; As mentioned above, plain text doesn’t add tons of behind-the-scenes code the more you work with a document, so you can say goodbye to Word’s bloated nonsense. It’s also true that popular file formats change over time: if you wrote documents in something like, say, WordStar years ago, those documents take a lot of doing to access these days. Plain text documents have always been, and will aways be, universally accessible.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;You can focus on your words.&lt;/strong&gt; Word tends to be so complex, and presents you with such a dizzying array of options (most of which you don’t need unless you’re a massive law firm or insurance corporation) that the tool itself can distract from your writing. A simple text editor removes all that nonsense–it’s just you and your words.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;You have more control over formatting.&lt;/strong&gt; The basic idea behind a plain-text workflow is that you do your &lt;em&gt;composing&lt;/em&gt; with a text editor in a sustainable, unversal format, and &lt;em&gt;then,&lt;/em&gt; only when your text is ready to send somewhere–say, to a journal for publication–do you worry about formatting. We’ll cover how to make this work in later posts, but for now, imagine this: you’ve written an article as a text file. That file contains only universal formatting for everything–subheadings, footnotes, citations, etc. To format the file for different venues, you use another piece of software to convert that document into any format you like. One journal wants the document submitted as a Word document with citations in MLA style? You simply tell your conversion software that’s what you want, and, with a few keystrokes, ZAP! You’ve got a properly-formatted Word document ready to go. Another journal wants same article submitted as a PDF with footnotes using the Chicago notes-bibliography style? A few more keystrokes and &lt;em&gt;voila!&lt;/em&gt; Need to make some substantial edits after a peer review? Make those edits in the original text file and avoid all the formatting headaches your word processor always gives you.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;It’s blazingly fast.&lt;/strong&gt; Text editors are tiny pieces of software compared to word processors, so they start instantaneously, load documents almost instantly, and run like lightning even on old hardware. Nothing gets between you and your words.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I should mention that this entire blog post was composed in a basic plain-text editor, called &lt;strong&gt;Vim&lt;/strong&gt;, an editor that runs simply in a terminal, and has been around since the late 1980’s! These words have never seen Word, and never will!&lt;/p&gt;

&lt;p&gt;Convinced? If so, stay tuned for more posts on working with plain-text writing tools.&lt;/p&gt;</content><author><name></name></author><summary type="html">The Elegance of Plain-Text Writing</summary></entry><entry><title type="html">Quiet Synchronity For Remote Teaching</title><link href="http://localhost:4000/2020/11/07/quiet-synchronicity.html" rel="alternate" type="text/html" title="Quiet Synchronity For Remote Teaching" /><published>2020-11-07T00:00:00-06:00</published><updated>2020-11-07T00:00:00-06:00</updated><id>http://localhost:4000/2020/11/07/quiet-synchronicity</id><content type="html" xml:base="http://localhost:4000/2020/11/07/quiet-synchronicity.html">&lt;h2 id=&quot;quiet-synchronicity-for-remote-teaching&quot;&gt;Quiet Synchronicity For Remote Teaching&lt;/h2&gt;

&lt;p&gt;As I’m one of those engaging in a first-time-ever experiment in all-remote teaching and learning, I’ve begun to wonder about how I think about “synchronous” classes, especially since “synchronous” seems to have become, for the most part, synonymous with Zoom or other video-based modes of communication. Zoom is an excellent and necessary tool, of course. At the same time, it’s “high bandwidth” on both literal and metaphorical levels: it uses the most literal bandwidth in terms of bits per second, but also the most intellectual and emotional bandwidth. It can feel exhausting.&lt;/p&gt;

&lt;p&gt;So, I’ve begun to explore what I’m calling “quietly synchronous teaching.” What if “synchronous” need not, necessarily, mean “live video?”&lt;/p&gt;

&lt;p&gt;Some things I’ve been experimenting with (with varied, but also promising, results):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Real-Time Text Chat&lt;/strong&gt;: We meet in a chatroom rather than on Zoom for all or part of a class. I’ve noticed that, since that kind of forum is something students are used to as a very informal kind of venue, they’ll actually interact with one another more than they will on Zoom sometimes. Sometimes I’ll just pose questions, others I’ll have students simply read a text together, posting their responses as they go. In a tool like Hangouts, you can even save a transcript of the entire session for later reference. (Note: the Moodle chatroom function is handy, but doesn’t allow one to save a transcript as far as I can tell.)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Real-Time Forums&lt;/strong&gt;: We use the regular Moodle Forum function, but we’re all working/writing simultaneously. Seems to work well for a more formal, organized discussion. Students can also divide different topics into their own threads. I’ve used things like “think/pair/share” kinds of structures with this.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hypothes.is&lt;/strong&gt;: This is an under-utilized gem. It’s an online tool, which can be integrated with Moodle, which allows groups to collectively annotate any digital text. Each student can add highlights and comments to the text, but the neat thing is that each comment has a “reply” function wherein students can actually engage in some back-and-forth conversation about their annotations (and of course the instructor can too). I think there’s a lot of possibility here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Watch parties&lt;/strong&gt;: These are higher bandwidth, but I’ve found it can be useful to use zoom to stream a video to the class, and everyone can discuss it in real-time in text chat (even zoom’s chat function works with this).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Synchronous Writing&lt;/strong&gt;: I borrowed this from a writing group I belong to, where we’ll help each other get work done by simply meeting in a real-time text chat room, and then use the “pomodoro” technique (focused 20-minute bursts of concentrated work), all doing our individual work together. Something about being present with others doing this really works, and we can encourage each other, share drafting back and forth, etc. between writing sessions. This is pretty neat when I want students to work on drafting essays, for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What tools, techniques, or exercises as anyone else found as potentially-effective “low bandwidth” alternatives?&lt;/p&gt;</content><author><name></name></author><summary type="html">Quiet Synchronicity For Remote Teaching</summary></entry><entry><title type="html">Mindful Computing: A Manifesto</title><link href="http://localhost:4000/2020/10/29/first-post-manifesto.html" rel="alternate" type="text/html" title="Mindful Computing: A Manifesto" /><published>2020-10-29T00:00:00-05:00</published><updated>2020-10-29T00:00:00-05:00</updated><id>http://localhost:4000/2020/10/29/first-post-manifesto</id><content type="html" xml:base="http://localhost:4000/2020/10/29/first-post-manifesto.html">&lt;h2 id=&quot;mindful-computing-a-manifesto&quot;&gt;Mindful Computing: A Manifesto&lt;/h2&gt;

&lt;p&gt;Noise. So much noise.&lt;/p&gt;

&lt;p&gt;And so much waste.&lt;/p&gt;

&lt;p&gt;Creating and interacting with digital content is inevitable for everyone these days, but, as we all know, the signal-to-noise ratio of the internet has made separating the valuable content from the noise and clutter of advertising, bots, misinformation, and just plain nonsense almost impossible. The internet generates more waste than product anymore, both in digital terms and in real ones (in the form of very destructive e-waste in the very non-digital world).&lt;/p&gt;

&lt;p&gt;Even the most popular operating systems that come installed on most devices these days (iOS, Android, Windows) only add to the waste. They are marketing platforms as much as they are operating systems: they exist to help sell new services and software, which means a significant part of their &lt;em&gt;raison d’etre&lt;/em&gt; is to get in your way, distract your attention, create noise and clutter on your screen.&lt;/p&gt;

&lt;p&gt;This is a blog dedicated to making tech sane again. Cutting out the noise and waste of the digital world in order to concentrate on content, creativity, and communication. Of the real stuff. Not the bullshit.&lt;/p&gt;

&lt;p&gt;There are ways of interacting with and within the digital world that can be more mindful, less full of clutter, and more elegant, without sacrificing functionality. Ways of taking back some control over your computer and your computing.&lt;/p&gt;

&lt;p&gt;One way to do this is to engage in a little reflection in the face of all the constant innovation. Is the newest tool or technology necessarily the best tool for the job? What lessons can we learn from the history of computing and software about what &lt;em&gt;really&lt;/em&gt; works, and works sustainably?&lt;/p&gt;

&lt;p&gt;There are many ways we “consumers” of computing can take back a lot of control. Open-source operating systems and software tools tend to focus on doing one thing well rather many things only adequately. They don’t need to sell you anything, so they don’t tend to distract. Plain-text, especially for writing and other text-intensive activities, can be liberating from propietary file formats and allow interoperability across every OS and every device. Simpler, less resource-intensive tools and platforms, such as linux, can run very well on older systems, increasing the longevity of devices so they don’t become unecessary e-waste.&lt;/p&gt;

&lt;p&gt;Computing can become more mindful, calm, sane. And it should.&lt;/p&gt;

&lt;p&gt;This blog is itself an example of what I mean. It’s not produced using any fancy tools at all. It’s hosted on Github (for free), which is a service used by many programmers and developers for tracking and versioning software projects. But paired with another tool, called &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, it also becomes an elegantly simple vehicle for hosting a blog. Everything I do for this blog is generated using the simplest of computing tools: a terminal program and a text editor. I write posts and pages using a simple set of formatting structures called &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;. I create the new post, using this very simple syntax. I update the online files on github to incorporate the post, and the software simply transforms my writing into a web format, complete with a minimalist theme that concentrates on the real content–my words–without other distraction.&lt;/p&gt;

&lt;p&gt;The tech never gets in my way. It. Just. Works.&lt;/p&gt;

&lt;p&gt;My hope is to help make saner, less noisy, and more elegant computing accessible to everyone.&lt;/p&gt;</content><author><name></name></author><summary type="html">Mindful Computing: A Manifesto</summary></entry></feed>